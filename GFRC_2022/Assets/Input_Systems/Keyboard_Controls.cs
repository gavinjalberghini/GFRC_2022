//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input_Systems/Keyboard_Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Keyboard_Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Keyboard_Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Keyboard_Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""4a17c674-26cc-4321-b649-2d870ee97e6c"",
            ""actions"": [
                {
                    ""name"": ""Spacebar"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2520fd36-8ed1-475b-acfd-044a756ced92"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5b752c1c-ef9a-45fa-bc18-cfeab5f6ba6f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""df801d58-4c56-4c01-8876-804cb57ee995"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6ceaba73-857f-45e3-b70a-9c043216fad0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""99620a52-ea22-4862-a520-ca4d917a9ed6"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b5ed93de-cef3-490b-a81c-7149c22577e5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseUp"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dcccf9ab-62f6-40ec-900d-d1a9b7a08f50"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ef40c536-a8cb-4a9b-a5f9-7e7515a2a0e0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EKey"",
                    ""type"": ""PassThrough"",
                    ""id"": ""da219a12-ef41-44a4-a45c-8ba21f73ea02"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpArrow"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ba3df47f-5e22-4e00-ae7e-987b9626a7d9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftArrow"",
                    ""type"": ""PassThrough"",
                    ""id"": ""64580754-980c-4595-b4b4-d57737ff5da0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DownArrow"",
                    ""type"": ""PassThrough"",
                    ""id"": ""00f7f094-d9d7-454f-81d2-446eff1bafa5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightArrow"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c769ae92-251c-4414-8be0-030df4bb3c07"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bf8beece-0db8-460c-a92c-29e8aa56f2e5"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spacebar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec2a36e4-2593-4762-afcc-0f919457e552"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""853b5c78-06ca-488b-8f6f-f55313d99612"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e32d25e-c460-47db-9908-1e5536a086a1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6f6350c-871f-42c1-a016-f28a5c370521"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ecdd140-842f-42a6-8f62-4e3090686a39"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d2ce6d3-7b1e-48be-8448-72b340241ca3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05273435-fc5e-4b2b-b463-fedd45cd1593"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2081a2f8-11d8-4889-b11c-ad282b2bfc66"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e58c16db-7091-4f7f-8860-f3b2b5adbfc3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75a4f79f-b2d4-45d7-ac2b-3087c0427614"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11e76f02-2504-42f9-8ec4-dd8eda1105a2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DownArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f275bc2-500d-40e9-b8cc-0cece2a057a6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightArrow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Spacebar = m_Gameplay.FindAction("Spacebar", throwIfNotFound: true);
        m_Gameplay_WKey = m_Gameplay.FindAction("WKey", throwIfNotFound: true);
        m_Gameplay_AKey = m_Gameplay.FindAction("AKey", throwIfNotFound: true);
        m_Gameplay_SKey = m_Gameplay.FindAction("SKey", throwIfNotFound: true);
        m_Gameplay_DKey = m_Gameplay.FindAction("DKey", throwIfNotFound: true);
        m_Gameplay_RKey = m_Gameplay.FindAction("RKey", throwIfNotFound: true);
        m_Gameplay_MouseUp = m_Gameplay.FindAction("MouseUp", throwIfNotFound: true);
        m_Gameplay_QKey = m_Gameplay.FindAction("QKey", throwIfNotFound: true);
        m_Gameplay_EKey = m_Gameplay.FindAction("EKey", throwIfNotFound: true);
        m_Gameplay_UpArrow = m_Gameplay.FindAction("UpArrow", throwIfNotFound: true);
        m_Gameplay_LeftArrow = m_Gameplay.FindAction("LeftArrow", throwIfNotFound: true);
        m_Gameplay_DownArrow = m_Gameplay.FindAction("DownArrow", throwIfNotFound: true);
        m_Gameplay_RightArrow = m_Gameplay.FindAction("RightArrow", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Spacebar;
    private readonly InputAction m_Gameplay_WKey;
    private readonly InputAction m_Gameplay_AKey;
    private readonly InputAction m_Gameplay_SKey;
    private readonly InputAction m_Gameplay_DKey;
    private readonly InputAction m_Gameplay_RKey;
    private readonly InputAction m_Gameplay_MouseUp;
    private readonly InputAction m_Gameplay_QKey;
    private readonly InputAction m_Gameplay_EKey;
    private readonly InputAction m_Gameplay_UpArrow;
    private readonly InputAction m_Gameplay_LeftArrow;
    private readonly InputAction m_Gameplay_DownArrow;
    private readonly InputAction m_Gameplay_RightArrow;
    public struct GameplayActions
    {
        private @Keyboard_Controls m_Wrapper;
        public GameplayActions(@Keyboard_Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Spacebar => m_Wrapper.m_Gameplay_Spacebar;
        public InputAction @WKey => m_Wrapper.m_Gameplay_WKey;
        public InputAction @AKey => m_Wrapper.m_Gameplay_AKey;
        public InputAction @SKey => m_Wrapper.m_Gameplay_SKey;
        public InputAction @DKey => m_Wrapper.m_Gameplay_DKey;
        public InputAction @RKey => m_Wrapper.m_Gameplay_RKey;
        public InputAction @MouseUp => m_Wrapper.m_Gameplay_MouseUp;
        public InputAction @QKey => m_Wrapper.m_Gameplay_QKey;
        public InputAction @EKey => m_Wrapper.m_Gameplay_EKey;
        public InputAction @UpArrow => m_Wrapper.m_Gameplay_UpArrow;
        public InputAction @LeftArrow => m_Wrapper.m_Gameplay_LeftArrow;
        public InputAction @DownArrow => m_Wrapper.m_Gameplay_DownArrow;
        public InputAction @RightArrow => m_Wrapper.m_Gameplay_RightArrow;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Spacebar.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSpacebar;
                @Spacebar.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSpacebar;
                @Spacebar.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSpacebar;
                @WKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWKey;
                @WKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWKey;
                @WKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWKey;
                @AKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAKey;
                @AKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAKey;
                @AKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAKey;
                @SKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSKey;
                @SKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSKey;
                @SKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSKey;
                @DKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDKey;
                @DKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDKey;
                @DKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDKey;
                @RKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRKey;
                @RKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRKey;
                @RKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRKey;
                @MouseUp.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMouseUp;
                @MouseUp.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMouseUp;
                @MouseUp.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMouseUp;
                @QKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQKey;
                @QKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQKey;
                @QKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnQKey;
                @EKey.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEKey;
                @EKey.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEKey;
                @EKey.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEKey;
                @UpArrow.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUpArrow;
                @UpArrow.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUpArrow;
                @UpArrow.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnUpArrow;
                @LeftArrow.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLeftArrow;
                @LeftArrow.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnLeftArrow;
                @DownArrow.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDownArrow;
                @DownArrow.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDownArrow;
                @DownArrow.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDownArrow;
                @RightArrow.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRightArrow;
                @RightArrow.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRightArrow;
                @RightArrow.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRightArrow;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Spacebar.started += instance.OnSpacebar;
                @Spacebar.performed += instance.OnSpacebar;
                @Spacebar.canceled += instance.OnSpacebar;
                @WKey.started += instance.OnWKey;
                @WKey.performed += instance.OnWKey;
                @WKey.canceled += instance.OnWKey;
                @AKey.started += instance.OnAKey;
                @AKey.performed += instance.OnAKey;
                @AKey.canceled += instance.OnAKey;
                @SKey.started += instance.OnSKey;
                @SKey.performed += instance.OnSKey;
                @SKey.canceled += instance.OnSKey;
                @DKey.started += instance.OnDKey;
                @DKey.performed += instance.OnDKey;
                @DKey.canceled += instance.OnDKey;
                @RKey.started += instance.OnRKey;
                @RKey.performed += instance.OnRKey;
                @RKey.canceled += instance.OnRKey;
                @MouseUp.started += instance.OnMouseUp;
                @MouseUp.performed += instance.OnMouseUp;
                @MouseUp.canceled += instance.OnMouseUp;
                @QKey.started += instance.OnQKey;
                @QKey.performed += instance.OnQKey;
                @QKey.canceled += instance.OnQKey;
                @EKey.started += instance.OnEKey;
                @EKey.performed += instance.OnEKey;
                @EKey.canceled += instance.OnEKey;
                @UpArrow.started += instance.OnUpArrow;
                @UpArrow.performed += instance.OnUpArrow;
                @UpArrow.canceled += instance.OnUpArrow;
                @LeftArrow.started += instance.OnLeftArrow;
                @LeftArrow.performed += instance.OnLeftArrow;
                @LeftArrow.canceled += instance.OnLeftArrow;
                @DownArrow.started += instance.OnDownArrow;
                @DownArrow.performed += instance.OnDownArrow;
                @DownArrow.canceled += instance.OnDownArrow;
                @RightArrow.started += instance.OnRightArrow;
                @RightArrow.performed += instance.OnRightArrow;
                @RightArrow.canceled += instance.OnRightArrow;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnSpacebar(InputAction.CallbackContext context);
        void OnWKey(InputAction.CallbackContext context);
        void OnAKey(InputAction.CallbackContext context);
        void OnSKey(InputAction.CallbackContext context);
        void OnDKey(InputAction.CallbackContext context);
        void OnRKey(InputAction.CallbackContext context);
        void OnMouseUp(InputAction.CallbackContext context);
        void OnQKey(InputAction.CallbackContext context);
        void OnEKey(InputAction.CallbackContext context);
        void OnUpArrow(InputAction.CallbackContext context);
        void OnLeftArrow(InputAction.CallbackContext context);
        void OnDownArrow(InputAction.CallbackContext context);
        void OnRightArrow(InputAction.CallbackContext context);
    }
}
